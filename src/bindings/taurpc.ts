 // This file has been generated by Specta. DO NOT EDIT.

export type AlbumDate = { year: number; month: number | null; day: number | null }

export type AlbumKv = { meta: AlbumMetaIpc; tracks: AudioTrackIpc[] }

export type AlbumMetaIpc = { album_artist: string | null; date: SomeAlbumDate; name: string | null }

export type AppErrorIpc = { kind: string; message: string }

export type AudioTrackIpc = { name: string; path: string; artist: string | null; album: string | null; album_artist: string | null; track_no: number | null; date: SomeAlbumDate; binary_hash: string | null }

export type DotfileSchema = { 
/**
 * only linux supports use_mpd for now, setting this to `true` on windows
 * would hard-crash the program
 */
general: GeneralSubSchema; library: LibrarySubSchema | null; mpd: MpdSubSchema | null }

export type GeneralSubSchema = { use_mpd: boolean }

export type LibrarySubSchema = { root: string }

export type MpdSubSchema = { addr: string; port: number }

export type SomeAlbumDate = AlbumDate | null

export type TauRpcRootApiInputTypes = { proc_name: "init"; input_type: null } | { proc_name: "load_music"; input_type: { __taurpc_type: AlbumKv[] } }

export type TauRpcRootApiOutputTypes = { proc_name: "init"; output_type: null } | { proc_name: "load_music"; output_type: null }

const ARGS_MAP = {"":"{\"load_music\":[\"data\"],\"init\":[]}"}
import { createTauRPCProxy as createProxy } from "taurpc"

export const createTauRPCProxy = () => createProxy<Router>(ARGS_MAP)

type Router = {
	'': [TauRpcRootApiInputTypes, TauRpcRootApiOutputTypes],
}